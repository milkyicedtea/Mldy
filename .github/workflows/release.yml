name: Build and Release Binaries

on:
  release:
    types: [created]

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: windows-latest
            platform: windows/amd64
            output: Mldy-windows-amd64.exe
            use_upx: true
          - os: macos-latest
            platform: darwin/amd64
            output: Mldy-darwin-amd64
            use_upx: false
          - os: macos-latest
            platform: darwin/arm64
            output: Mldy-darwin-arm64
            use_upx: false
          - os: ubuntu-22.04
            platform: linux/amd64
            output: Mldy-linux-amd64
            use_upx: true
          - os: ubuntu-22.04
            platform: linux/arm64
            output: Mldy-linux-arm64
            use_upx: true


    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go/@v5
        with:
          go-version: '1.24'

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Install UPX
        if: matrix.use_upx == true
        uses: crazy-max/ghaction-upx@v3
        with:
          install-only: true
          version: latest

      - name: Install dependencies (Linux)
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev

      - name: Build application
        run: |
          if [ "${{ matrix.use_upx }}" = "true" ]; then
            wails build -platform ${{ matrix.platform }} -o ${{ matrix.output }} -upx
          else
            wails build -platform ${{ matrix.platform }} -o ${{ matrix.output }}
          fi
          shell: bash

      - name: Upload binary to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/bin/${{ matrix.output }}
          asset_name: ${{ matrix.output }}
          asset_content_type: application/octet-stream
